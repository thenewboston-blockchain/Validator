version: '3.2'

services:
  redis:
    image: redis:alpine

  db:
    image: postgres:12-alpine
    environment:
      - POSTGRES_DB=thenewboston
      - POSTGRES_USER=thenewboston
      - POSTGRES_PASSWORD=thenewboston
      - C_FORCE_ROOT=true
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  app:
    build:
      dockerfile: Dockerfile
      context: .
    environment:
      - DJANGO_APPLICATION_ENVIRONMENT=local
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - NETWORK_SIGNING_KEY=6f812a35643b55a77f71c3b722504fbc5918e83ec72965f7fd33865ed0be8f81
      - REDIS_HOST=redis
      - POSTGRES_HOST=db
      - POSTGRES_DB=thenewboston
      - POSTGRES_USER=thenewboston
      - POSTGRES_PASSWORD=thenewboston
      - SECRET_KEY=somesecret
    command: python3 -u /opt/project/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/opt/project
    ports:
      - '8000:8000'
    links:
      - db
      - redis
    depends_on:
      - db
      - redis

  celery:
    build:
      dockerfile: Dockerfile
      context: .
    environment:
      - DJANGO_APPLICATION_ENVIRONMENT=local
      - NETWORK_SIGNING_KEY=6f812a35643b55a77f71c3b722504fbc5918e83ec72965f7fd33865ed0be8f81
      - REDIS_HOST=redis
      - POSTGRES_HOST=db
      - POSTGRES_DB=thenewboston
      - POSTGRES_USER=thenewboston
      - POSTGRES_PASSWORD=thenewboston
      - SECRET_KEY=somesecret
    command: celery -A config.settings worker -l debug
    volumes:
      - .:/opt/project
    links:
      - db
      - redis
    depends_on:
      - db
      - redis

volumes:
  postgresql-data:
    driver: local
